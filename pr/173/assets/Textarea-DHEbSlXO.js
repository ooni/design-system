import{a as o,j as a}from"./jsx-runtime-2xDJh5tt.js";import{r as u}from"./index-CBqU2yxZ.js";import{g as d,o as p}from"./index-VdX8XDJn.js";import{E as m}from"./ErrorMessage-6K3cCZRc.js";import{B as n}from"./Box-DhaIz1PF.js";import{T as f}from"./Text-BhBHMpTl.js";const s=u.forwardRef(({error:e,label:r,name:i,...t},l)=>o(n,{...d(t),children:[r&&a(f,{fontWeight:"bold",mb:1,display:"block",as:"label",htmlFor:i,children:r}),a(n,{ref:l,as:"textarea",tx:"forms",variant:e?"errorTextarea":"textarea",...p(t),__css:{display:"block",width:"100%",p:2,appearance:"none",fontSize:"inherit",lineHeight:"inherit",border:"1px solid",borderRadius:"default",color:"inherit",bg:"transparent"}}),e&&a(m,{children:e})]}));try{s.displayName="Textarea",s.__docgenInfo={description:"",displayName:"Textarea",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},variant:{defaultValue:null,description:"",name:"variant",required:!1,type:{name:"ResponsiveValue<string, Required<Theme<TLengthStyledSystem>>>"}},tx:{defaultValue:null,description:"",name:"tx",required:!1,type:{name:"string"}},__css:{defaultValue:null,description:"",name:"__css",required:!1,type:{name:"SxStyleProp"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSSProp"}},fontSize:{defaultValue:null,description:"The fontSize utility parses a component's `fontSize` prop and converts it into a CSS font-size declaration.\n\n- Numbers from 0-8 (or `theme.fontSizes.length`) are converted to values on the [font size scale](#default-theme).\n- Numbers greater than `theme.fontSizes.length` are converted to raw pixel values.\n- String values are passed as raw CSS values.\n- And array values are converted into responsive values.",name:"fontSize",required:!1,type:{name:"number"}},sx:{defaultValue:null,description:"The sx prop lets you style elements inline, using values from your theme.",name:"sx",required:!1,type:{name:"SxStyleProp"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}}}}}catch{}export{s as T};
